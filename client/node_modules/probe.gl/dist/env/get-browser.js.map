{"version":3,"sources":["../../src/env/get-browser.js"],"names":["isMobile","getBrowser","window","orientation","mockUserAgent","navigator_","navigator","userAgent","indexOf","isMSIE","isTrident","chrome","safari","mozInnerScreenX"],"mappings":"4EA2BgBA,Q,CAAAA,Q,iBAOQC,U,6RAPjB,QAASD,SAAT,EAAoB,CACzB,MAAqC,WAA9B,QAAOE,iBAAOC,WACtB,CAKc,QAASF,WAAT,CAAoBG,aAApB,CAAmC,CAChD,GAAI,CAACA,aAAD,EAAkB,CAAC,yBAAvB,CACE,MAAO,MAAP,CAGF,GAAI,yBAAWA,aAAX,CAAJ,CACE,MAAO,UAAP,CAN8C,GAU1CC,YAAkC,WAArB,QAAOC,UAAP,CAA+C,EAA/C,CAAmCA,SAVN,CAW1CC,UAAYH,eAAiBC,WAAWE,SAA5B,EAAyC,EAXX,CAehD,GAAgC,CAAC,CAA7B,WAAUC,OAAV,CAAkB,MAAlB,CAAJ,CACE,MAAO,MAAP,CAhB8C,GAkB1CC,QAAwC,CAAC,CAAhC,aAAUD,OAAV,CAAkB,OAAlB,CAlBiC,CAmB1CE,UAA8C,CAAC,CAAnC,aAAUF,OAAV,CAAkB,UAAlB,CAnB8B,OAoB5CC,SAAUC,SApBkC,CAqBvC,IArBuC,CAuB5CR,gBAAOS,MAvBqC,CAwBvC,QAxBuC,CA0B5CT,gBAAOU,MA1BqC,CA2BvC,QA3BuC,CA6B5CV,gBAAOW,eA7BqC,CA8BvC,SA9BuC,CAgCzC,SACR","file":"get-browser.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\nimport {window} from './globals';\nimport isBrowser from './is-browser';\nimport isElectron from './is-electron';\n\nexport function isMobile() {\n  return typeof window.orientation !== 'undefined';\n}\n\n// Simple browser detection\n// `mockUserAgent` parameter allows user agent to be overridden for testing\n/* eslint-disable complexity */\nexport default function getBrowser(mockUserAgent) {\n  if (!mockUserAgent && !isBrowser()) {\n    return 'Node';\n  }\n\n  if (isElectron(mockUserAgent)) {\n    return 'Electron';\n  }\n\n  /* global navigator */\n  const navigator_ = typeof navigator !== 'undefined' ? navigator : {};\n  const userAgent = mockUserAgent || navigator_.userAgent || '';\n  // const appVersion = navigator_.appVersion || '';\n\n  // NOTE: Order of tests matter, as many agents list Chrome etc.\n  if (userAgent.indexOf('Edge') > -1) {\n    return 'Edge';\n  }\n  const isMSIE = userAgent.indexOf('MSIE ') !== -1;\n  const isTrident = userAgent.indexOf('Trident/') !== -1;\n  if (isMSIE || isTrident) {\n    return 'IE';\n  }\n  if (window.chrome) {\n    return 'Chrome';\n  }\n  if (window.safari) {\n    return 'Safari';\n  }\n  if (window.mozInnerScreenX) {\n    return 'Firefox';\n  }\n  return 'Unknown';\n}\n"]}